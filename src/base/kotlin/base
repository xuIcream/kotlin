语法
var
val
var a: Int = 0
var a = 0

没有基本数据类型，
都是对象的话？ 慢，耗费内存
不会

最终编译成class的时候 该是int 就是int 该是 Integer就是Integer


函数
fun max(a: Int, b: Int): Int {
    return if (a > b) a else b
}

fun max(a: Int, b: Int) = if (a > b) a else b

fun <T> joinToString(collection: Collection<T>,
                     separator: String,
                     prefix: String,
                     postfix: String): String {}

joinToString(list, separator = " ", prefix = " ", postfix = ".")


Default parameter values
fun <T> joinToString(collection: Collection<T>,
                     separator: String = ", ",
                     prefix: String = "",
                     postfix: String = ""
                     ): String
joinToString(list)


//扩展方法
fun String.lastChar(): Char = this[this.length - 1]

public static final char lastChar(@NotNull String $receiver) {
  return $receiver.charAt($receiver.length() - 1);
}




Object // Java代码
Any    // Kotlin代码

interface Interface {
}

open class SubClassA(n: Int): Interface {

}

class KClassB(n: Int): SubClassA(n) {

}

if (num instanceof Double) {  }  // Java代码
if (num is Double) {  }  // Kotlin代码

(Double)num    // Java代码

num as Double  // Kotlin代码